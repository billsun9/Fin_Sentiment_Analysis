{"version":3,"sources":["components/Navbar.js","components/Jots.js","components/Notepad.js","App.js","index.js"],"names":["Navbar","className","to","Jots","useState","allJots","setAllJots","getId","Math","floor","random","useEffect","chrome","runtime","onMessage","addListener","request","sender","sendResponse","message","payload","sendMessage","res","length","map","jot","onSubmit","e","preventDefault","Notepad","title","setTitle","text","setText","XMLHttpRequest","open","setRequestHeader","params","username","avatar_url","content","JSON","stringify","send","type","required","value","onChange","target","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAaeA,EAXA,WACX,OACI,qBAAKC,UAAU,SAAf,SACI,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,qBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,2B,QCmDDC,EAtDF,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACRC,EADQ,KACCC,EADD,KAGTC,EAAQ,WACV,OAAOC,KAAKC,MAAsB,OAAhBD,KAAKE,WAkC3B,OArBAC,qBAAU,WACNC,OAAOC,QAAQC,UAAUC,aAAY,SAACC,EAASC,EAAQC,GAC5B,YAApBF,EAAQG,SACPb,EAAWU,EAAQI,YAI3BR,OAAOC,QAAQQ,YAAY,CAACF,QAAS,6BAA6B,SAAAG,GAC3C,wBAAhBA,EAAIH,SACHb,EAAWgB,EAAIF,cAWxB,IAEC,sBAAKnB,UAAU,iBAAf,UACI,4DACmB,GAAlBI,EAAQkB,QAAelB,EAAQmB,KAAI,SAACC,GAAD,OAChC,qBAAKxB,UAAU,MAAf,SACKwB,GADqBlB,MAI9B,sBAAMmB,SAvCO,SAACC,GAClBA,EAAEC,iBACCvB,EAAQkB,OAAS,GAChBX,OAAOC,QAAQQ,YAAY,CAAEF,QAAS,wBAAyB,SAAAG,GACxC,wBAAhBA,EAAIH,SACHb,EAAW,QAkCnB,SACI,kDCCDuB,EAjDC,WAAO,IAAD,EACQzB,mBAAS,IADjB,mBACX0B,EADW,KACJC,EADI,OAEM3B,mBAAS,IAFf,mBAEX4B,EAFW,KAELC,EAFK,KA0BlB,OACI,sBAAKhC,UAAU,UAAf,UACI,kDACA,uBAAMyB,SATO,SAACC,GAClBA,EAAEC,iBAhBc,WAChB,IAAIZ,EAAU,IAAIkB,eAClBlB,EAAQmB,KAAK,OAAQ,4HAErBnB,EAAQoB,iBAAiB,eAAgB,oBAEzC,IAAMC,EAAS,CACbC,SAAU,kCACVC,WAAY,GACZC,QAASC,KAAKC,UAAU,CAACZ,QAAOE,UAGlChB,EAAQ2B,KAAKF,KAAKC,UAAUL,IAK5BhB,GACAU,EAAS,IACTE,EAAQ,KAKJ,UACI,2CACA,uBAAOW,KAAK,OACRC,UAAQ,EACRC,MAAOhB,EACPiB,SAAU,SAACpB,GAAD,OAAOI,EAASJ,EAAEqB,OAAOF,UAGvC,+CACA,0BACID,UAAQ,EACRC,MAAOd,EACPe,SAAU,SAACpB,GAAD,OAAOM,EAAQN,EAAEqB,OAAOF,UAEtC,qDCrBDG,MArBf,WACE,OACE,cAAC,IAAD,UACE,sBAAKhD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,wBAAQA,UAAU,UAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,EAAD,iBCVdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c385796a.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return ( \r\n        <nav className=\"navbar\">\r\n            <div className=\"links\">\r\n                <Link to=\"/\">New Jot</Link>\r\n                <Link to=\"/notepad\">Notepad</Link>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Navbar;","/*global chrome*/\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst Jots = () => {\r\n    const [allJots, setAllJots] = useState([]);\r\n    \r\n    const getId = () => {\r\n        return Math.floor(Math.random() * 999999);\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(allJots.length > 0) {\r\n            chrome.runtime.sendMessage({ message: 'send_data_to_server' }, res => {\r\n                if(res.message === 'data_sent_to_server') {\r\n                    setAllJots([]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n            if(request.message === 'new_jot') {\r\n                setAllJots(request.payload);\r\n            }\r\n        });\r\n\r\n        chrome.runtime.sendMessage({message: 'get_current_data_on_load'}, res => {\r\n            if(res.message === 'loaded_current_data') {\r\n                setAllJots(res.payload);\r\n            }\r\n        });\r\n        // chrome.storage.sync.get(null, res => {\r\n        //     let keys = Object.keys(res);\r\n        //     if (keys.length != 0) {\r\n        //         setAllJots(res['current_data']);\r\n        //     }\r\n        // });\r\n\r\n\r\n    }, []);\r\n    return ( \r\n        <div className=\"jots-container\">\r\n            <h2>Copy-pastes and Jots here!</h2>\r\n            {allJots.length != 0 && allJots.map((jot) => (\r\n                <div className=\"jot\" key={getId}>\r\n                    {jot}\r\n                </div>\r\n            ))}\r\n            <form onSubmit={handleSubmit}>\r\n                <button >Submit</button>\r\n            </form>\r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Jots;","import { useState } from 'react';\r\n// import { useHistory } from 'react-router-dom';\r\n\r\nconst Notepad = () => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [text, setText] = useState(\"\");\r\n\r\n    // const hist = useHistory();\r\n    const sendMessage = () => {\r\n        let request = new XMLHttpRequest();\r\n        request.open(\"POST\", \"https://discord.com/api/webhooks/822156124916678676/3EmfzC8BtjHYrwScmB1way_wNNeqa37bM7rwbjODiuraLq9VSdHBM6bvJMiav0Dl_Fos\");\r\n    \r\n        request.setRequestHeader('Content-type', 'application/json');\r\n    \r\n        const params = {\r\n          username: \"WZDM Chrome Extension - Notepad\",\r\n          avatar_url: \"\",\r\n          content: JSON.stringify({title, text})\r\n        }\r\n    \r\n        request.send(JSON.stringify(params));\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        sendMessage();\r\n        setTitle(\"\");\r\n        setText(\"\");\r\n    }\r\n    return ( \r\n        <div className=\"notepad\">\r\n            <h2>Enter some text!</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Title:</label>\r\n                <input type=\"text\" \r\n                    required \r\n                    value={title} \r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n\r\n                <label>Text body:</label>\r\n                <textarea \r\n                    required \r\n                    value={text} \r\n                    onChange={(e) => setText(e.target.value)}\r\n                ></textarea>\r\n                <button>Add Data</button>\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Notepad;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Jots from './components/Jots';\nimport Notepad from './components/Notepad';\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <header className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Jots />\n            </Route>\n            <Route path=\"/notepad\">\n              <Notepad />\n            </Route>\n          </Switch>\n        </header>\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}